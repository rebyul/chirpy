@EMAIL = user@test.com
@PASSWORD = asdfasdf

import ./admin.http
import ./create-user.http


### Login

run #RESET_USERS
run #CREATE_USER (@PASSWORD=asdfasdf, @EMAIL=user@test.com)

POST /api/login HTTP/1.1
Content-Type: application/json
Host: {{BASE_URL}}

{
  "email": "{{CREATE_USER.response.body.$.email}}",
  "password": "{{PASSWORD}}"
}

> {%
   let json = response.body;
   assert.responseHas('responseCode', 200, 'Check response is 200');
   assert.true('id' in json, 'Has .id')
   assert.true('created_at' in json, 'Has .created_at')
   assert.true('updated_at' in json, 'Has .update_at')
   assert.true('email' in json, 'Has .email')
   assert.true(json.email === 'user@test.com', 'Has correct email')
   assert.true('token' in json, 'Has .token')
%}


### LOGIN_WITH_VALID_EXPIRES_IN_SECONDS

run #RESET_USERS
run #CREATE_USER (@PASSWORD=asdfasdf, @EMAIL=user@test.com)

POST /api/login HTTP/1.1
Content-Type: application/json
Host: {{BASE_URL}}

{
  "email": "{{CREATE_USER.response.body.$.email}}",
  "expires_in_seconds": 60,
  "password": "{{PASSWORD}}"
}

> {%
   let json = response.body;
   assert.responseHas('responseCode', 200, 'Check response is 200');
   assert.true('id' in json, 'Has .id')
   assert.true('created_at' in json, 'Has .created_at')
   assert.true('updated_at' in json, 'Has .update_at')
   assert.true('email' in json, 'Has .email')
   assert.true(json.email === 'user@test.com', 'Has correct email')
   assert.true('token' in json, 'Has .token')
%}


### LOGIN_WITH_INVALID_EXPIRES_IN_SECONDS

run #RESET_USERS
run #CREATE_USER (@PASSWORD=asdfasdf, @EMAIL=user@test.com)

POST /api/login HTTP/1.1
Content-Type: application/json
Host: {{BASE_URL}}

{
  "email": "{{CREATE_USER.response.body.$.email}}",
  "expires_in_seconds": -60,
  "password": "{{PASSWORD}}"
}

> {%
   let json = response.body;
   assert.responseHas('responseCode', 200, 'Check response is 200');
   assert.true('id' in json, 'Has .id')
   assert.true('created_at' in json, 'Has .created_at')
   assert.true('updated_at' in json, 'Has .update_at')
   assert.true('email' in json, 'Has .email')
   assert.true(json.email === 'user@test.com', 'Has correct email')
   assert.true('token' in json, 'Has .token')
%}


### 
