// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: reset.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const deleteUsers = `-- name: DeleteUsers :many
delete from users
returning id
`

func (q *Queries) DeleteUsers(ctx context.Context) ([]uuid.UUID, error) {
	rows, err := q.db.QueryContext(ctx, deleteUsers)
	if err != nil {
		return nil, err
	}

	defer rows.Close()
	var items []uuid.UUID
	for rows.Next() {
		var id uuid.UUID
		if err := rows.Scan(&id); err != nil {
			return nil, err
		}
		items = append(items, id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
