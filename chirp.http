@BASE_URL = HTTP://localhost:8080


### Validate Chirp

POST /api/validate_chirp HTTP/1.1
Content-Type: application/json
Host: {{BASE_URL}}

{
  "body": "This is an opinion I need to share with the world"
}

> {%
  let json = response.body;

  client.test('Check response', function () {
    assert.responseHas('responseCode', 200, 'Check response is 200');
    assert.true('valid' in json, 'Response is true')
  })
%}

### Example 200

POST /api/validate_chirp HTTP/1.1
Content-Type: application/json
Host: {{BASE_URL}}

{
  "body": "I had something interesting for breakfast"
}

> {%
  let json = response.body;

  client.test('Check response', function () {
    assert.responseHas('responseCode', 200, 'Check response is 200');
    assert.true('valid' in json, 'Response is true')
  })
%}

### Test invalid Chirp

POST /api/validate_chirp HTTP/1.1
Content-Type: application/json
Host: {{BASE_URL}}

{
  "body": "Some long text that i need to make over 140 characters to trigger an invalid chirp length that should invalidate. We want to test the response has the correct response"
}

> {%
  let json = response.body;

  client.test('Check response', function () {
    assert.responseHas('responseCode', 400, 'Check response is 400');
    assert.true('error' in json, 'Response has error')
    assert.headersHas("Content-Type", "application/json", 'header has content-type application/json')
    assert(json.error === 'Chirp is too long', 'Check error message')
  })

%}

### Example invalid Chirp

POST /api/validate_chirp HTTP/1.1
Content-Type: application/json
Host: {{BASE_URL}}

{
  "body": "lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
}

> {%
  let json = response.body;

  client.test('Check response', function () {
    assert.responseHas('responseCode', 400, 'Check response is 400');
    assert.true('error' in json, 'Response has error')
    assert.headersHas("Content-Type", "application/json", 'header has content-type application/json')
    assert(json.error === 'Chirp is too long', 'Check error message')
  })

%}
